// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Muddi.ShiftPlanner.Server.Database.Contexts;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Muddi.ShiftPlanner.Server.Database.Migrations
{
    [DbContext(typeof(ShiftPlannerContext))]
    [Migration("20230402154342_AddSeasons")]
    partial class AddSeasons
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.SeasonEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("pk_seasons");

                    b.ToTable("seasons", (string)null);
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftContainerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end");

                    b.Property<Guid>("FrameworkId")
                        .HasColumnType("uuid")
                        .HasColumnName("framework_id");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid")
                        .HasColumnName("location_id");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start");

                    b.Property<int>("TotalShifts")
                        .HasColumnType("integer")
                        .HasColumnName("total_shifts");

                    b.HasKey("Id")
                        .HasName("pk_containers");

                    b.HasIndex("FrameworkId")
                        .HasDatabaseName("ix_containers_framework_id");

                    b.HasIndex("LocationId")
                        .HasDatabaseName("ix_containers_location_id");

                    b.ToTable("containers", (string)null);
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("EmployeeKeycloakId")
                        .HasColumnType("uuid")
                        .HasColumnName("employee_keycloak_id");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end");

                    b.Property<Guid>("ShiftContainerId")
                        .HasColumnType("uuid")
                        .HasColumnName("shift_container_id");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_shifts");

                    b.HasIndex("ShiftContainerId")
                        .HasDatabaseName("ix_shifts_shift_container_id");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_shifts_type_id");

                    b.ToTable("shifts", (string)null);
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftFrameworkEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("SeasonId")
                        .HasColumnType("uuid")
                        .HasColumnName("season_id");

                    b.Property<int>("SecondsPerShift")
                        .HasColumnType("integer")
                        .HasColumnName("seconds_per_shift");

                    b.HasKey("Id")
                        .HasName("pk_shift_frameworks");

                    b.HasIndex("SeasonId")
                        .HasDatabaseName("ix_shift_frameworks_season_id");

                    b.ToTable("shift_frameworks", (string)null);
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftFrameworkTypeCountEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("count");

                    b.Property<Guid>("ShiftFrameworkId")
                        .HasColumnType("uuid")
                        .HasColumnName("shift_framework_id");

                    b.Property<Guid>("ShiftTypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("shift_type_id");

                    b.HasKey("Id")
                        .HasName("pk_shift_framework_type_count_entity");

                    b.HasIndex("ShiftFrameworkId")
                        .HasDatabaseName("ix_shift_framework_type_count_entity_shift_framework_id");

                    b.HasIndex("ShiftTypeId")
                        .HasDatabaseName("ix_shift_framework_type_count_entity_shift_type_id");

                    b.ToTable("shift_framework_type_count_entity", (string)null);
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftLocationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("SeasonId")
                        .HasColumnType("uuid")
                        .HasColumnName("season_id");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uuid")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_shift_locations");

                    b.HasIndex("SeasonId")
                        .HasDatabaseName("ix_shift_locations_season_id");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_shift_locations_type_id");

                    b.ToTable("shift_locations", (string)null);
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftLocationTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_shift_location_types");

                    b.ToTable("shift_location_types", (string)null);
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("OnlyAssignableByAdmin")
                        .HasColumnType("boolean")
                        .HasColumnName("only_assignable_by_admin");

                    b.Property<Guid>("SeasonId")
                        .HasColumnType("uuid")
                        .HasColumnName("season_id");

                    b.Property<TimeSpan>("StartingTimeShift")
                        .HasColumnType("interval")
                        .HasColumnName("starting_time_shift");

                    b.HasKey("Id")
                        .HasName("pk_shift_types");

                    b.HasIndex("SeasonId")
                        .HasDatabaseName("ix_shift_types_season_id");

                    b.ToTable("shift_types", (string)null);
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftContainerEntity", b =>
                {
                    b.HasOne("Muddi.ShiftPlanner.Server.Database.Entities.ShiftFrameworkEntity", "Framework")
                        .WithMany()
                        .HasForeignKey("FrameworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_containers_shift_frameworks_framework_id");

                    b.HasOne("Muddi.ShiftPlanner.Server.Database.Entities.ShiftLocationEntity", "Location")
                        .WithMany("Containers")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_containers_shift_locations_location_id");

                    b.Navigation("Framework");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftEntity", b =>
                {
                    b.HasOne("Muddi.ShiftPlanner.Server.Database.Entities.ShiftContainerEntity", "ShiftContainer")
                        .WithMany("Shifts")
                        .HasForeignKey("ShiftContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shifts_containers_shift_container_id");

                    b.HasOne("Muddi.ShiftPlanner.Server.Database.Entities.ShiftTypeEntity", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shifts_shift_types_type_id");

                    b.Navigation("ShiftContainer");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftFrameworkEntity", b =>
                {
                    b.HasOne("Muddi.ShiftPlanner.Server.Database.Entities.SeasonEntity", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shift_frameworks_seasons_season_id");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftFrameworkTypeCountEntity", b =>
                {
                    b.HasOne("Muddi.ShiftPlanner.Server.Database.Entities.ShiftFrameworkEntity", "ShiftFramework")
                        .WithMany("ShiftTypeCounts")
                        .HasForeignKey("ShiftFrameworkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shift_framework_type_count_entity_shift_frameworks_shift_fra");

                    b.HasOne("Muddi.ShiftPlanner.Server.Database.Entities.ShiftTypeEntity", "ShiftType")
                        .WithMany()
                        .HasForeignKey("ShiftTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shift_framework_type_count_entity_shift_types_shift_type_id");

                    b.Navigation("ShiftFramework");

                    b.Navigation("ShiftType");
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftLocationEntity", b =>
                {
                    b.HasOne("Muddi.ShiftPlanner.Server.Database.Entities.SeasonEntity", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shift_locations_seasons_season_id");

                    b.HasOne("Muddi.ShiftPlanner.Server.Database.Entities.ShiftLocationTypeEntity", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shift_locations_shift_location_types_type_id");

                    b.Navigation("Season");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftTypeEntity", b =>
                {
                    b.HasOne("Muddi.ShiftPlanner.Server.Database.Entities.SeasonEntity", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shift_types_seasons_season_id");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftContainerEntity", b =>
                {
                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftFrameworkEntity", b =>
                {
                    b.Navigation("ShiftTypeCounts");
                });

            modelBuilder.Entity("Muddi.ShiftPlanner.Server.Database.Entities.ShiftLocationEntity", b =>
                {
                    b.Navigation("Containers");
                });
#pragma warning restore 612, 618
        }
    }
}
