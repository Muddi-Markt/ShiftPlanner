@using Muddi.ShiftPlanner.Client.Services
@using Muddi.ShiftPlanner.Shared.Contracts.v1.Responses
@inject IShiftService ShiftService;
<RadzenSidebar Expanded="Expanded" ExpandedChanged="ExpandedChanged" class="demos-sidebar">
	<ChildContent>
		<RadzenPanelMenu Match="NavLinkMatch.Prefix">
			@foreach (var location in _locations)
			{
				<RadzenPanelMenuItem Text="@location.Name" Path="@location.Path" Icon="@location.Icon"/>
			}
		</RadzenPanelMenu>
	</ChildContent>
</RadzenSidebar>

@code{

	[Parameter]
	public bool Expanded { get; set; } = true;

	[Parameter]
	public EventCallback<bool> ExpandedChanged { get; set; }


	private bool _sidebarExpanded = true;
	private IEnumerable<ShiftLocation> _locations = Enumerable.Empty<ShiftLocation>();

	protected override async Task OnInitializedAsync()
	{
		_locations = await ShiftService.GetAllShiftLocationsAsync();
	}

}