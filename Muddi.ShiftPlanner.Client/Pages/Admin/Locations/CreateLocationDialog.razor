@using Muddi.ShiftPlanner.Shared.Api
@inherits UpdateDialogBase<GetLocationResponse>
<div class="row">
    <div class="col-md-4 align-items-center d-flex">
        <RadzenLabel Text="Name"/>
    </div>
    <div class="col-md-8">
        <RadzenTextBox  @bind-Value="_name" Placeholder="Name"></RadzenTextBox>
    </div>
</div>
<div class="row">
    <div class="col-md-4 align-items-center d-flex">
        <RadzenLabel Text="Location Typ"/>
    </div>
    <div class="col-md-8">
        <RadzenDropDown @bind-Value="_selectedType"
                        AllowVirtualization="true"
                        Count="_count"
                        Data="_data"
                        TextProperty="@nameof(GetLocationTypesResponse.Name)">
        </RadzenDropDown>
    </div>
</div>
<div class="row">
    <div class="col-md-4 align-items-center d-flex">
        <RadzenLabel Text="Location Typ"/>
    </div>
    <div class="col-md-8">
        
    </div>
</div>
<div class="row">
    <div class="col-md-12 text-right">
        <RadzenButton Click="UpdateAndClose" ButtonStyle="ButtonStyle.Success" Text="OK"/>
        <RadzenButton Click="Abort" ButtonStyle="ButtonStyle.Danger" Text="Abbrechen" Class="mr-1"/>
    </div>
</div>

@code {

    protected override async Task OnParametersSetAsync()
    {
        _data = (await ShiftApi.LocationTypesGetAll());
        _count = _data.Count;
        _selectedType = _data.First();
    }

    private IReadOnlyCollection<GetLocationTypesResponse> _data;
    private int _count;

    private GetLocationTypesResponse? _selectedType;

    

    private string? _name;

    protected override Task Create()
    {
        return ShiftApi.LocationsCreate(new CreateLocationRequest()
        {
            Name = _name,
            TypeId = _selectedType.Id
        });
    }

    protected override Task Update()
    {
        throw new NotImplementedException();
    }

}