@using Muddi.ShiftPlanner.Client.Services
@inherits UpdateDialogBase<GetContainerResponse>

@inject ShiftService ShiftService;
<div class="row mt-1 mb-1 w-100">
	<div class="col-md-4 align-items-center d-flex">
		<RadzenLabel Text="Framework"/>
	</div>
	<div class="col-md-8">
		<RadzenDropDown Data="_frameworks"
		                TValue="GetFrameworkResponse"
		                @bind-Value="EntityToEdit.Framework"
		                Change="UpdateEnd"
		                TextProperty="@nameof(GetFrameworkResponse.Name)">
		</RadzenDropDown>
	</div>
</div>
<div class="row mt-1 mb-1 w-100">
	<div class="col-md-4 align-items-center d-flex">
		<RadzenLabel Text="Start"/>
	</div>
	<div class="col-md-8">
		<RadzenDatePicker @bind-Value="EntityToEdit.Start" Placeholder="Start" ShowTime="true" Change="UpdateEnd"></RadzenDatePicker>
	</div>
</div>
<div class="row mt-1 mb-1 w-100">
	<div class="col-md-4 align-items-center d-flex">
		<RadzenLabel Text="Add for subsequent days"/>
	</div>
	<div class="col-md-8">
		<RadzenNumeric
			TValue="int"
			@bind-Value="_subsequentDays"
			Min="0"
			Max="30"
			Placeholder="Total shift count">
		</RadzenNumeric>
	</div>
</div>
<div class="row mt-1 mb-1 w-100">
	<div class="col-md-4 align-items-center d-flex">
		<RadzenLabel Text="Total shift count"/>
	</div>
	<div class="col-md-8">
		<RadzenNumeric
			TValue="int"
			@bind-Value="EntityToEdit.TotalShifts"
			Min="1"
			Max="24"
			Placeholder="Total shift count"
			Change="UpdateEnd">
		</RadzenNumeric>
	</div>
</div>
<div class="row mt-1 mb-1 w-100">
	<div class="col-md-4 align-items-center d-flex">
		<RadzenLabel Text="End"/>
	</div>
	<div class="col-md-8">
		<RadzenDatePicker @bind-Value="_endDate" Placeholder="End" Disabled="true" ShowTime="true"></RadzenDatePicker>
	</div>
</div>
<div class="row">
    <div class="col-md-4 align-items-center d-flex">
        <RadzenLabel Text="Color"/>
    </div>
    <div class="col-md-8">
        <RadzenColorPicker @bind-Value="EntityToEdit.Color" ShowHSV="true" ShowColors="true"></RadzenColorPicker>
    </div>
</div>
<div class="row mb-3 mt-4">
	<div class="col-md-12 text-right">
		<RadzenButton Click="UpdateAndClose" ButtonStyle="ButtonStyle.Success" Text="OK"/>
		<RadzenButton Click="CloseWithoutSave" ButtonStyle="ButtonStyle.Danger" Text="Abort" Class="mr-1"/>
	</div>
</div>

@code {

	protected override async Task OnInitializedAsync()
	{
		_frameworks = await ShiftApi.GetAllFrameworks(new(){ SeasonId = ShiftService.CurrentSeason.Id});
		EntityToEdit.Start = ShiftService.CurrentSeason.StartDate;
		EntityToEdit.TotalShifts = 1;
	}

	[Parameter]
	public Guid LocationId { get; set; }

	protected override async Task Create()
	{
		if (_subsequentDays < 0)
			_subsequentDays = 0;

		for (int i = 0; i < _subsequentDays + 1; i++)
		{
			await ShiftApi.CreateContainer(new CreateContainerRequest
			{
				FrameworkId = EntityToEdit.Framework.Id,
				Start = EntityToEdit.Start.AddDays(i).ToUniversalTime(),
				TotalShifts = EntityToEdit.TotalShifts,
				LocationId = LocationId,
				Color = EntityToEdit.Color
			});
		}
	}

	protected override Task Update()
	{
		throw new NotImplementedException();
	}

	private DateTime? _endDate;
	private IEnumerable<GetFrameworkResponse> _frameworks;

	private void UpdateEnd()
	{
		_endDate = EntityToEdit.GetEndTime();
	}

	private int _subsequentDays;
}